[tox]
envlist =
    clean,
    check,
    3.6-cover,
    3.6-nocov,
    report,
    docs

[testenv]
basepython =
    {spell}: {env:TOXPYTHON:python2.7}
    {docs}: {env:TOXPYTHON:python3}
    {bootstrap,clean,check,report,extension-coveralls,coveralls,codecov}: {env:TOXPYTHON:python3}
setenv =
    PYTHONUNBUFFERED=yes
passenv =
    TRAVIS
    TRAVIS_*
    CI
    CONTINUOUS_INTEGRATION
    DEBIAN_FRONTEND
    HAS_JOSH_K_SEAL_OF_APPROVAL
    LANG
    LC_ALL
    RAILS_ENV
    RACK_ENV
    MERB_ENV
    JRUBY_OPTS
    JAVA_HOME
    APPVEYOR
    APPVEYOR_*
deps =
    pytest
    pytest-travis-fold
commands =
    {envpython} -m pytest {posargs:-vv}

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
usedevelop = false
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
usedevelop = false
commands =
    python ci/bootstrap.py
[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
usedevelop = false
commands =
    coveralls []

[testenv:codecov-nix]
deps =
    codecov
skip_install = true
usedevelop = false
commands =
    coverage xml --ignore-errors
    codecov []

[testenv:codecov-windows]
deps =
    coverage
skip_install = true
usedevelop = false
commands =
    choco install codecov
    coverage xml --ignore-errors
    codecov


[testenv:report]
deps = coverage
skip_install = true
usedevelop = false
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

[testenv:3.6-cover]
basepython = {env:TOXPYTHON:python3.6}
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    {envpython} -m divide_and_cover run -m pytest {posargs:-vv} --divide-and-cover
deps =
    {[testenv]deps}
    pytest_divide_and_cover

[testenv:3.6-nocov]
basepython = {env:TOXPYTHON:python3.6}



